unit uGoogleSpeech.DTO;

//  *************************************************
//    Generated By: JsonToDelphiClass - 0.65
//    Project link: https://github.com/PKGeorgiev/Delphi-JsonToDelphiClass
//    Generated On: 2023-02-10 13:26:12
//  *************************************************
//    Created By  : Petar Georgiev - 2014
//    WebSite     : http://pgeorgiev.com
//  *************************************************

interface

uses Generics.Collections, Rest.Json;

type
  TAudioConfigClass = class
  private
    FAudioEncoding: String;
    FEffectsProfileId: TArray<String>;
    FPitch: Extended;
    FSampleRateHertz: Extended;
    FSpeakingRate: Extended;
    FVolumeGainDb: Extended;
  public
    property audioEncoding: String read FAudioEncoding write FAudioEncoding;
    property effectsProfileId: TArray<String> read FEffectsProfileId write FEffectsProfileId;
    property pitch: Extended read FPitch write FPitch;
    property sampleRateHertz: Extended read FSampleRateHertz write FSampleRateHertz;
    property speakingRate: Extended read FSpeakingRate write FSpeakingRate;
    property volumeGainDb: Extended read FVolumeGainDb write FVolumeGainDb;
    function ToJsonString: string;
    class function FromJsonString(AJsonString: string): TAudioConfigClass;
  end;

  TTimepointsClass = class
  private
    FMarkName: String;
    FTimeSeconds: Extended;
  public
    property markName: String read FMarkName write FMarkName;
    property timeSeconds: Extended read FTimeSeconds write FTimeSeconds;
    function ToJsonString: string;
    class function FromJsonString(AJsonString: string): TTimepointsClass;
  end;

  TGoogleTextToSpeechResponseClass = class
  private
    FAudioConfig: TAudioConfigClass;
    FAudioContent: String;
    FTimepoints: TArray<TTimepointsClass>;
  public
    property audioConfig: TAudioConfigClass read FAudioConfig write FAudioConfig;
    property audioContent: String read FAudioContent write FAudioContent;
    property timepoints: TArray<TTimepointsClass> read FTimepoints write FTimepoints;
    constructor Create;
    destructor Destroy; override;
    function ToJsonString: string;
    class function FromJsonString(AJsonString: string): TGoogleTextToSpeechResponseClass;
  end;

  TGoogleVoiceClass = class
  private
    FLanguageCodes: TArray<String>;
    FName: String;
    FNaturalSampleRateHertz: Extended;
    FSsmlGender: String;
  public
    property languageCodes: TArray<String> read FLanguageCodes write FLanguageCodes;
    property name: String read FName write FName;
    property naturalSampleRateHertz: Extended read FNaturalSampleRateHertz write FNaturalSampleRateHertz;
    property ssmlGender: String read FSsmlGender write FSsmlGender;
    function ToJsonString: string;
    class function FromJsonString(AJsonString: string): TGoogleVoiceClass;
  end;

  TGoogleVoicesListClass = class
  private
    FVoices: TArray<TGoogleVoiceClass>;
  public
    property voices: TArray<TGoogleVoiceClass> read FVoices write FVoices;
    destructor Destroy; override;
    function ToJsonString: string;
    class function FromJsonString(AJsonString: string): TGoogleVoicesListClass;
  end;



implementation

{TAudioConfigClass}


function TAudioConfigClass.ToJsonString: string;
begin
  Result := TJson.ObjectToJsonString(self);
end;

class function TAudioConfigClass.FromJsonString(AJsonString: string): TAudioConfigClass;
begin
  Result := TJson.JsonToObject<TAudioConfigClass>(AJsonString)
end;

{TTimepointsClass}


function TTimepointsClass.ToJsonString: string;
begin
  Result := TJson.ObjectToJsonString(self);
end;

class function TTimepointsClass.FromJsonString(AJsonString: string): TTimepointsClass;
begin
  Result := TJson.JsonToObject<TTimepointsClass>(AJsonString)
end;

{TRootClass}

constructor TGoogleTextToSpeechResponseClass.Create;
begin
  inherited;
  FAudioConfig := TAudioConfigClass.Create();
end;

destructor TGoogleTextToSpeechResponseClass.Destroy;
var
  LtimepointsItem: TTimepointsClass;
begin

 for LtimepointsItem in FTimepoints do
   LtimepointsItem.free;

  FAudioConfig.free;
  inherited;
end;

function TGoogleTextToSpeechResponseClass.ToJsonString: string;
begin
  Result := TJson.ObjectToJsonString(self);
end;

class function TGoogleTextToSpeechResponseClass.FromJsonString(AJsonString: string): TGoogleTextToSpeechResponseClass;
begin
  Result := TJson.JsonToObject<TGoogleTextToSpeechResponseClass>(AJsonString)
end;

{TVoicesClass}


function TGoogleVoiceClass.ToJsonString: string;
begin
  Result := TJson.ObjectToJsonString(self);
end;

class function TGoogleVoiceClass.FromJsonString(AJsonString: string): TGoogleVoiceClass;
begin
  Result := TJson.JsonToObject<TGoogleVoiceClass>(AJsonString)
end;

{TRootClass}

destructor TGoogleVoicesListClass.Destroy;
var
  LvoicesItem: TGoogleVoiceClass;
begin

 for LvoicesItem in FVoices do
   LvoicesItem.free;

  inherited;
end;

function TGoogleVoicesListClass.ToJsonString: string;
begin
  Result := TJson.ObjectToJsonString(self);
end;

class function TGoogleVoicesListClass.FromJsonString(AJsonString: string): TGoogleVoicesListClass;
begin
  Result := TJson.JsonToObject<TGoogleVoicesListClass>(AJsonString)
end;

end.
