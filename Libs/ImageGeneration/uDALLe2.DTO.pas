unit uDALLe2.DTO;

//  *************************************************
//    Generated By: JsonToDelphiClass - 0.65
//    Project link: https://github.com/PKGeorgiev/Delphi-JsonToDelphiClass
//    Generated On: 2023-03-29 20:54:53
//  *************************************************
//    Created By  : Petar Georgiev - 2014
//    WebSite     : http://pgeorgiev.com
//  *************************************************

interface

uses Generics.Collections, Rest.Json;

type

  TDataClass = class
  private
    FUrl: String;
  public
    property url: String read FUrl write FUrl;
    function ToJsonString: string;
    class function FromJsonString(const AJsonString: string): TDataClass;
  end;

  TGeneratedImagesClass = class
  protected
    FCreated: Extended;
    FData: TArray<TDataClass>;
  public
    property created: Extended read FCreated write FCreated;
    property data: TArray<TDataClass> read FData write FData;
    destructor Destroy; override;
    function ToJsonString: string;
    class function FromJsonString(const AJsonString: string): TGeneratedImagesClass;
  end;

implementation

{TDataClass}


function TDataClass.ToJsonString: string;
begin
  Result := TJson.ObjectToJsonString(self);
end;

class function TDataClass.FromJsonString(const AJsonString: string): TDataClass;
begin
  result := TJson.JsonToObject<TDataClass>(AJsonString)
end;

{TGeneratedImagesClass}

destructor TGeneratedImagesClass.Destroy;
var
  LdataItem: TDataClass;
begin

 for LdataItem in FData do
   LdataItem.free;

  inherited;
end;

function TGeneratedImagesClass.ToJsonString: string;
begin
  Result := TJson.ObjectToJsonString(self);
end;

class function TGeneratedImagesClass.FromJsonString(const AJsonString: string): TGeneratedImagesClass;
begin
  result := TJson.JsonToObject<TGeneratedImagesClass>(AJsonString)
end;

end.
